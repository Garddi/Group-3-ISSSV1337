topic_assignment <- left_join(top_docs, ws_doc_prob, by = c("document", "gamma"))
topic_assignment <- topic_assignment %>% # Rename the topics after the labels I gave them
mutate(topic_label = case_when(topic == 9 ~ "Struggle",
topic == 5 ~ "Hope",
topic == 3 ~ "Social problems",
topic == 1 ~ "Noise",
topic == 6 ~ "Street",
topic == 2 ~ "Infatuation",
topic == 7 ~ "Joy",
topic == 10 ~ "Immigration",
topic == 8 ~ "Love",
topic == 4 ~ "Noise"))
classified <- topic_assignment %>%
select(document, topic_label) %>% # Fetch the document and the topic_label variables
mutate(document = str_replace_all(document, "-", " "), # Replace the hyphen (-) in the songnames with a space
document = str_to_title(document)) %>% # Make the words in the string upper case
rename(Song = document, # Rename the document variable to "Song"
Topic = topic_label) # Rename the topic_label variable to "Topic"
classified
classified %>%
kableExtra::kable() %>% # Make a beautiful table out of it
kableExtra::kable_styling()
setwd("~/Group-3-ISSSV1337/Question_Data")
load("MetadataQuestionList.Rdata")
load("All_Questions.Rdata")
k <- list()
?if
for(x in unique(questionlist$id)){
if (x %in% questiontext$id){
print("Ignore")
} else {
k[[x]] <- print(x)
}
}
print(questionlist$id)
if(questionlist$id %!in% questiontext$id){
print(questionlist$id)
}
if(!(questionlist$id %in% questiontext$id)){
print(questionlist$id)
}
questionlist[!(questionlist$id %in% questiontext$id)]
questionlist$id[!(questionlist$id %in% questiontext$id)]
library(stortingscrape)
get_question(questionid = "89903", good_manners = 0)
library(tidyr)
sum(str_detect(questiontext$question_text, "FN-sambandet"))
sum(str_detect(questiontext$question_text, "utdanning for bærekraftig utvikling"))
sum(str_detect(questiontext$answer_text, "utdanning for bærekraftig utvikling"))
sum(str_detect(questiontext$question_text, "Utdanning for bærekraftig utvikling"))
sum(str_detect(questiontext$question_text, "Utdanning for Bærekraftig utvikling"))
sum(str_detect(questiontext$question_text, "Utdanning for Bærekraftig Utvikling"))
sum(str_detect(questiontext$answer_text, "FN-sambandet"))
sum(str_detect(questiontext$question_text, ignore.case("FN-sambandet")))
## Next step is to find the relevant keywords, filter questions and ascertain
## the dates and attached documents that they exist in.
library(stringr)
sum(str_detect(questiontext$question_text, ignore.case("FN-sambandet")))
sum(str_detect(questiontext$question_text,"FN-sambandet"))
sum(str_detect(questiontext$question_text,"fn-sambandet"))
str_detect(questiontext$answer_text,"Samfunnsøkonomisk")
print("æøå")
Sys.setlocale(category = "LC_ALL", "")
print("æøå")
str_detect(questiontext$answer_text,"Samfunnsøkonomisk")
View(questiontext)
sum(str_detect(questiontext$question_text, "Utdanning for Bærekraftig Utvikling"))
View(questiontext)
answerlist <- questiontext %>%
select(id, answer_text, title, type, question_from_id,
question_to_id)
answerlist <- questiontext %>%
select(id, answer_text, title, type, question_from_id,
qustion_to_id)
answerlist <- answerlist %>%
drop_na(answer_text)
answerlist$answer_text[1]
answerlist <- answerlist %>%
mutate(notapplicable = ifelse(answer_text == "", NA, 1))
View(answerlist)
answerlist <- answerlist %>%
mutate(notapplicable = ifelse(answer_text == "", NA, 1)) %>%
drop_na(notapplicable) %>%
select(-notapplicable)
answerlist <- questiontext %>%
select(id, answer_text, title, type, question_from_id,
qustion_to_id)
answerlist <- answerlist %>%
mutate(notapplicable = ifelse(answer_text == "", NA, 1)) %>%
drop_na(notapplicable) %>%
select(-notapplicable)
?get_session_publications
answerlist <- questiontext %>%
select(id, text = answer_text, title, type, question_from_id,
qustion_to_id)
answerlist <- answerlist %>%
mutate(notapplicable = ifelse(text == "", NA, 1)) %>%
drop_na(notapplicable) %>%
select(-notapplicable)
questionshort <- questiontext %>%
select(id, text = question_text, title, type, question_from_id,
qustion_to_id)
assembledtextquestions <- rbind(questionshort, answerlist)
View(assembledtextquestions)
rm(k)
rm(answerlist, questionlist, questionshort, questiontext)
sum(str_detect(assembledtextquestions$text, "FN-sambandet"))
sum(str_detect(assembledtextquestions$text, "bærekraftig utvikling"))
sessions_storting <- get_parlsessions()
sessions_storting <- sessions_storting %>%
filter(id %in% c("2011-2012", "2012-2013", "2013-2014",
"2014-2015", "2015-2016", "2016-2017",
"2017-2018", "2018-2019", "2019-2020",
"2020-2021", "2021-2022"))
?get_session_cases
print("æøå")
Sys.setlocale(category = "LC_ALL", "")
print("æøå")
a <- list()
for(x in unique(sessions_storting$id)){
it <- 100*(which(unique(sessions_storting$id) == x) / length(unique(sessions_storting$id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
a[[x]] <- get_session_cases(sessionid = x, good_manners = 0, cores = 1)
}
View(a)
b <- do.call("rbind", a)
View(b)
c <- do.call("rbind", b)
View(a[["2020-2021"]][["root"]])
b <- list()
for(x in a){
b[[x]] <- do.call("rbind", a[[x]][[root]])
}
for(x in a){
b[[x]] <- do.call("rbind", a[[x]][[root]])
}
kl <- do.call("rbind", a[["2021-2022"]][[root]]
for(x in a){
b[[x]] <- a[[x]][[root]]
}
b[["2021-2022"]] <- a[["2021-2022"]][[root]]
View(a)
a[["2021-2022"]][[root]]
view(a[["2021-2022"]][[root]])
b[["2021-2022"]] <- a[["2021-2022"]][["root"]]
View(b)
b <- list()
for(x in a){
b[[x]] <- a[[x]][["root"]]
}
for(i in a){
b[[i]] <- a[[i]][["root"]]
}
View(i)
for(i in a){
b[[i]] <- i[["root"]]
}
b <- list()
View(a)
print(a)
print(a[1])
print(a[,1])
print(a[[]])
print(a[[1]])
for(x in sessions_storting$id){
b[[x]] <- a[[x]][["root"]]
}
View(b)
caselist <- do.call("rbind", b)
View(caselist)
?get_case
qeirdcheck <- get_case(caseid = "89884", good_manners = 0)
qeirdcheck <- get_case(caseid = "89669", good_manners = 0)
qeirdcheck <- get_case(caseid = "87598", good_manners = 0)
qeirdcheck <- get_case(caseid = "88949", good_manners = 0)
View(qeirdcheck)
View(caselist)
d <- list()
for(x in unique(caselist$id)){
it <- 100*(which(unique(caselist$id) == x) / length(unique(caselist$id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
d[[x]] <- get_case(caseid = x, good_manners = 0)
}
qeirdcheck <- get_case(caseid = "64948", good_manners = 0)
View(caselist)
caselist <- caselist %>%
filter(session_id != "2021-2022")
d <- list()
for(x in unique(caselist$id)){
it <- 100*(which(unique(caselist$id) == x) / length(unique(caselist$id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
d[[x]] <- get_case(caseid = x, good_manners = 0)
}
for(x in unique(caselist$id)){
#it <- 100*(which(unique(caselist$id) == x) / length(unique(caselist$id)))
#cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
d[[x]] <- get_case(caseid = x, good_manners = 0)
}
?tryCatch
View(caselist)
for(x in unique(caselist$id)){
it <- 100*(which(unique(caselist$id) == x) / length(unique(caselist$id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
d[[x]] <- get_case(caseid = x, good_manners = 0)
}
install.packages("rstanarm")
print("æøå")
print("æøå")
Sys.setlocale(category = "LC_ALL", "")
for(x in unique(caselist$id)){
it <- 100*(which(unique(caselist$id) == x) / length(unique(caselist$id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
d[[x]] <- get_case(caseid = x, good_manners = 0)
}
for(x in unique(caselist$id)){
it <- 100*(which(unique(caselist$id) == x) / length(unique(caselist$id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
try(d[[x]] <- get_case(caseid = x, good_manners = 0),
silent = TRUE)
}
View(d)
library(pdftools)
documentiwant <- pdftools::pdf_text("C:/Users/gardi/OneDrive/Documents/CLIMREC/comunicado_079_2008_08102008_184121.pdf")
?pdf_text
View(d)
print("æøå")
Sys.setlocale(category = "LC_ALL", "")
print("æøå")
?cat
?sprintf
get_written_hearing_input(hearingid = "10004439", good_manners = 0)
print("æøå")
Sys.setlocale(category = "LC_ALL", "")
print("æøå")
Sys.setlocale(category = "LC_ALL", "")
ok <- "hei" + "jeg"
ok <- combine("hei", "jeg")
ok <- vec_c("hei", "jeg-")
ok <- paste0("hei", "jeg")
ok <- paste("hei", "jeg")
get_written_hearing_input(hearingid = "10004439", good_manners = 0)
?get_written_hearing_input
get_written_hearing_input(hearingid = 10004243)
get_written_hearing_input(hearingid = 10004439, good_manners = 0)
get_written_hearing_input(hearingid = "10004243")
j <- list()
View(sessions_storting)
sessions_storting <- get_parlperiods()
View(sessions_storting)
sessions_storting <- get_parlsessions()
sessions_storting <- sessions_storting %>%
filter(id %in% c("2011-2012", "2012-2013", "2013-2014",
"2014-2015", "2015-2016", "2016-2017",
"2017-2018", "2018-2019", "2019-2020",
"2020-2021", "2021-2022"))
periods_storting <- get_parlperiods()
View(sessions_storting)
View(periods_storting)
periods_storting <- periods_storting %>%
filter(id %in% c("2021-2025", "2017-2021", "2013-2017", "2009-2013"))
for (x in periods_storting$id) {
j[[x]] <- get_parlperiod_mps(periodid = x, substitute = TRUE,
good_manners = 0)
}
View(j)
allmps <- do.call("rbind", j)
View(allmps)
?get_session_mp_speech_activity
kl <- list()
View(allmps)
View(sessions_storting)
View(periods_storting)
for (x in sessions_storting$id) {
if (x == "2021-2022") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2021-2025")
} else if (x == "2020-2021" | x == "2019-2020" | x == "2018-2019" |
x == "2017-2018") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2017-2021")
} else if (x == "2016-2017" | x == "2015-2016" | x == "2014-2015" |
x == "2013-2014") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2013-2017")
} else if (x == "2012-2013" | x == "2011-2012" | x == "2010-2011" |
x == "2009-2011") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2009-2013")
}next
sessionsmps <- do.call(rbind(sessionsmps))
for(i in sessionsmps$mp_id){
mps1[[x]] <- get_session_mp_speech_activity(sessionid = session_id, mp_id = i,
good_manners= 0)
}
}
sessionsmps <- list()
for (x in sessions_storting$id) {
if (x == "2021-2022") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2021-2025")
} else if (x == "2020-2021" | x == "2019-2020" | x == "2018-2019" |
x == "2017-2018") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2017-2021")
} else if (x == "2016-2017" | x == "2015-2016" | x == "2014-2015" |
x == "2013-2014") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2013-2017")
} else if (x == "2012-2013" | x == "2011-2012" | x == "2010-2011" |
x == "2009-2011") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2009-2013")
}next
sessionsmps <- do.call(rbind(sessionsmps))
for(i in sessionsmps$mp_id){
mps1[[x]] <- get_session_mp_speech_activity(sessionid = session_id, mp_id = i,
good_manners= 0)
}
}
for (x in sessions_storting$id) {
if (x == "2021-2022") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2021-2025")
} else if (x == "2020-2021" | x == "2019-2020" | x == "2018-2019" |
x == "2017-2018") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2017-2021")
} else if (x == "2016-2017" | x == "2015-2016" | x == "2014-2015" |
x == "2013-2014") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2013-2017")
} else if (x == "2012-2013" | x == "2011-2012" | x == "2010-2011" |
x == "2009-2011") {
sessionsmps[[x]] <- allmps %>% filter(period_id == "2009-2013")
}next
sessionsmps <- do.call("rbind", sessionsmps)
for(i in sessionsmps$mp_id){
mps1[[x]] <- get_session_mp_speech_activity(sessionid = session_id, mp_id = i,
good_manners= 0)
}
}
sessions_storting
mps1 <- list()
mps2 <- list()
mps3 <- list()
mps4 <- list()
mps5 <- list()
mps6 <- list()
mps7 <- list()
mps8 <- list()
mps9 <- list()
mps10 <- list()
mps11 <- list()
for(x in allmps$mp_id){
it <- 100*(which(unique(allmps$mp_id) == x) / length(unique(allmps$mp_id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
mps1[[x]] <- get_session_mp_speech_activity(sessionid = "2021-2022", mp_id = x, good_manners = 0)
mps2[[x]] <- get_session_mp_speech_activity(sessionid = "2020-2021", mp_id = x, good_manners = 0)
mps3[[x]] <- get_session_mp_speech_activity(sessionid = "2019-2020", mp_id = x, good_manners = 0)
mps4[[x]] <- get_session_mp_speech_activity(sessionid = "2018-2019", mp_id = x, good_manners = 0)
mps5[[x]] <- get_session_mp_speech_activity(sessionid = "2017-2018", mp_id = x, good_manners = 0)
mps6[[x]] <- get_session_mp_speech_activity(sessionid = "2016-2017", mp_id = x, good_manners = 0)
mps7[[x]] <- get_session_mp_speech_activity(sessionid = "2015-2016", mp_id = x, good_manners = 0)
mps8[[x]] <- get_session_mp_speech_activity(sessionid = "2014-2015", mp_id = x, good_manners = 0)
mps9[[x]] <- get_session_mp_speech_activity(sessionid = "2013-2014", mp_id = x, good_manners = 0)
mps10[[x]] <- get_session_mp_speech_activity(sessionid = "2012-2013", mp_id = x, good_manners = 0)
mps11[[x]] <- get_session_mp_speech_activity(sessionid = "2011-2012", mp_id = x, good_manners = 0)
}
for(x in allmps$mp_id){
it <- 100*(which(unique(allmps$mp_id) == x) / length(unique(allmps$mp_id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
try(
mps1[[x]] <- get_session_mp_speech_activity(sessionid = "2021-2022", mp_id = x, good_manners = 0)
mps2[[x]] <- get_session_mp_speech_activity(sessionid = "2020-2021", mp_id = x, good_manners = 0)
mps3[[x]] <- get_session_mp_speech_activity(sessionid = "2019-2020", mp_id = x, good_manners = 0)
mps4[[x]] <- get_session_mp_speech_activity(sessionid = "2018-2019", mp_id = x, good_manners = 0)
mps5[[x]] <- get_session_mp_speech_activity(sessionid = "2017-2018", mp_id = x, good_manners = 0)
mps6[[x]] <- get_session_mp_speech_activity(sessionid = "2016-2017", mp_id = x, good_manners = 0)
mps7[[x]] <- get_session_mp_speech_activity(sessionid = "2015-2016", mp_id = x, good_manners = 0)
mps8[[x]] <- get_session_mp_speech_activity(sessionid = "2014-2015", mp_id = x, good_manners = 0)
mps9[[x]] <- get_session_mp_speech_activity(sessionid = "2013-2014", mp_id = x, good_manners = 0)
mps10[[x]] <- get_session_mp_speech_activity(sessionid = "2012-2013", mp_id = x, good_manners = 0)
mps11[[x]] <- get_session_mp_speech_activity(sessionid = "2011-2012", mp_id = x, good_manners = 0)
)}
activ <- get_session_mp_speech_activity("2012-2013", "ALYS")
View(activ)
?get_session_publications
?get_session_meetings
for(x in allmps$mp_id){
it <- 100*(which(unique(allmps$mp_id) == x) / length(unique(allmps$mp_id)))
cat(paste0(sprintf("Progress: %.4f%%             ", it), "\r"))
try(mps1[[x]] <- get_session_mp_speech_activity(sessionid = "2021-2022", mp_id = x, good_manners = 0))
try(mps2[[x]] <- get_session_mp_speech_activity(sessionid = "2020-2021", mp_id = x, good_manners = 0))
try(mps3[[x]] <- get_session_mp_speech_activity(sessionid = "2019-2020", mp_id = x, good_manners = 0))
try(mps4[[x]] <- get_session_mp_speech_activity(sessionid = "2018-2019", mp_id = x, good_manners = 0))
try(mps5[[x]] <- get_session_mp_speech_activity(sessionid = "2017-2018", mp_id = x, good_manners = 0))
try(mps6[[x]] <- get_session_mp_speech_activity(sessionid = "2016-2017", mp_id = x, good_manners = 0))
try(mps7[[x]] <- get_session_mp_speech_activity(sessionid = "2015-2016", mp_id = x, good_manners = 0))
try(mps8[[x]] <- get_session_mp_speech_activity(sessionid = "2014-2015", mp_id = x, good_manners = 0))
try(mps9[[x]] <- get_session_mp_speech_activity(sessionid = "2013-2014", mp_id = x, good_manners = 0))
try(mps10[[x]] <- get_session_mp_speech_activity(sessionid = "2012-2013", mp_id = x, good_manners = 0))
try(mps11[[x]] <- get_session_mp_speech_activity(sessionid = "2011-2012", mp_id = x, good_manners = 0))
}
View(mps1)
View(mps11)
View(b)
View(b)
View(d)
View(caselist)
get_case(caseid = "85264", good_manners = 0)
View(caselist)
sum(str_detect(caselist$title, "UNICEF"))
sum(str_detect(caselist$title, "WFP"))
sum(str_detect(caselist$title, "FN-sambandet"))
View(activ)
?get_session_cases
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE, message = FALSE)
list_example <- list(c("Oh darn, my text is in a list", "How to turn it into a dataframe?"))
do.call(rbind, list_example) %>% as_tibble()
enframe(list_example) %>% unnest()
knitr::opts_chunk$set(echo = TRUE)
sum(str_detect(questiontextwparty$justification_l, "delmål 4.7"))
load("Question_Data/questionsdfm")
textrelevance <- textrelevance %>%
mutate(priority_word_level = case_when(str_detect(text_q_l, "fn-sambandet") ~ "1",
str_detect(text_q_l, "utdanning for bærekraftig utvikling")  ~ "2",
str_detect(text_q_l, "utdanning for berekraftig utvikling") ~ "2",
str_detect(text_q_l, "unicef") ~ "3",
str_detect(text_q_l, "wfp") ~ "3",
str_detect(text_q_l, "unaids") ~ "3",
str_detect(text_a_l, "fn-sambandet") ~ "1",
str_detect(text_a_l, "utdanning for bærekraftig utvikling") ~ "2",
str_detect(text_a_l, "utdanning for berekraftig utvikling") ~ "2",
str_detect(text_a_l, "unicef") ~ "3",
str_detect(text_a_l, "wfp") ~ "3",
str_detect(text_a_l, "unaids") ~ "3",
str_detect(justification_l, "fn-sambandet") ~ "1",
str_detect(justification_l, "utdanning for bærekraftig utvikling") ~ "2",
str_detect(justification_l, "utdanning for berekraftig utvikling") ~ "2",
str_detect(justification_l, "unicef") ~ "3",
str_detect(justification_l, "wfp") ~ "3",
str_detect(justification_l, "unaids") ~ "3",
str_detect(text_q_l, "unesco") ~ "3",
str_detect(text_a_l, "unesco") ~ "3",
str_detect(justification_l, "unesco") ~ "3",
str_detect(text_q_l, "undp") ~ "3",
str_detect(text_a_l, "undp") ~ "3",
str_detect(justification_l, "undp") ~ "3",
str_detect(text_q_l, "\\b(ilo)\\b") ~ "3",
str_detect(text_a_l, "\\b(ilo)\\b") ~ "3",
str_detect(justification_l, "\\b(ilo)\\b") ~ "3",
str_detect(text_q_l, "fns matvareprogram") ~ "3",
str_detect(text_a_l, "fns matvareprogram") ~ "3",
str_detect(justification_l, "fns matvareprogram") ~ "3",
str_detect(text_q_l, "who") ~ "3",
str_detect(text_a_l, "who") ~ "3",
str_detect(justification_l, "who") ~ "3",
str_detect(text_q_l, "verdens helseorganisasjon") ~ "3",
str_detect(text_a_l, "verdens helseorganisasjon") ~ "3",
str_detect(justification_l, "verdens helseorganisasjon") ~ "3",
str_detect(text_q_l, "ipcc") ~ "3",
str_detect(text_a_l, "ipcc") ~ "3",
str_detect(justification_l, "ipcc") ~ "3",
str_detect(text_q_l, "fns klimapanel") ~ "3",
str_detect(text_a_l, "fns klimapanel") ~ "3",
str_detect(justification_l, "fns klimapanel") ~ "3",
str_detect(text_q_l, "bærekraftsmål") ~ "3",
str_detect(text_a_l, "bærekraftsmål") ~ "3",
str_detect(justification_l, "bærekraftsmål") ~ "3",
str_detect(text_q_l, "berekraftsmål") ~ "3",
str_detect(text_a_l, "berekraftsmål") ~ "3",
str_detect(justification_l, "berekraftsmål") ~ "3"
str_detect(text_q_l, "2030-agendaen") ~ "3",
textrelevance <- textrelevance %>%
mutate(priority_word_level = case_when(str_detect(text_q_l, "fn-sambandet") ~ "1",
str_detect(text_q_l, "utdanning for bærekraftig utvikling")  ~ "2",
str_detect(text_q_l, "utdanning for berekraftig utvikling") ~ "2",
str_detect(text_q_l, "unicef") ~ "3",
str_detect(text_q_l, "wfp") ~ "3",
str_detect(text_q_l, "unaids") ~ "3",
str_detect(text_a_l, "fn-sambandet") ~ "1",
str_detect(text_a_l, "utdanning for bærekraftig utvikling") ~ "2",
str_detect(text_a_l, "utdanning for berekraftig utvikling") ~ "2",
str_detect(text_a_l, "unicef") ~ "3",
str_detect(text_a_l, "wfp") ~ "3",
str_detect(text_a_l, "unaids") ~ "3",
str_detect(justification_l, "fn-sambandet") ~ "1",
str_detect(justification_l, "utdanning for bærekraftig utvikling") ~ "2",
str_detect(justification_l, "utdanning for berekraftig utvikling") ~ "2",
str_detect(justification_l, "unicef") ~ "3",
str_detect(justification_l, "wfp") ~ "3",
str_detect(justification_l, "unaids") ~ "3",
str_detect(text_q_l, "unesco") ~ "3",
str_detect(text_a_l, "unesco") ~ "3",
str_detect(justification_l, "unesco") ~ "3",
str_detect(text_q_l, "undp") ~ "3",
str_detect(text_a_l, "undp") ~ "3",
str_detect(justification_l, "undp") ~ "3",
str_detect(text_q_l, "\\b(ilo)\\b") ~ "3",
str_detect(text_a_l, "\\b(ilo)\\b") ~ "3",
str_detect(justification_l, "\\b(ilo)\\b") ~ "3",
str_detect(text_q_l, "fns matvareprogram") ~ "3",
str_detect(text_a_l, "fns matvareprogram") ~ "3",
str_detect(justification_l, "fns matvareprogram") ~ "3",
str_detect(text_q_l, "who") ~ "3",
str_detect(text_a_l, "who") ~ "3",
str_detect(justification_l, "who") ~ "3",
str_detect(text_q_l, "verdens helseorganisasjon") ~ "3",
str_detect(text_a_l, "verdens helseorganisasjon") ~ "3",
str_detect(justification_l, "verdens helseorganisasjon") ~ "3",
str_detect(text_q_l, "ipcc") ~ "3",
str_detect(text_a_l, "ipcc") ~ "3",
str_detect(justification_l, "ipcc") ~ "3",
str_detect(text_q_l, "fns klimapanel") ~ "3",
str_detect(text_a_l, "fns klimapanel") ~ "3",
str_detect(justification_l, "fns klimapanel") ~ "3",
str_detect(text_q_l, "bærekraftsmål") ~ "3",
str_detect(text_a_l, "bærekraftsmål") ~ "3",
str_detect(justification_l, "bærekraftsmål") ~ "3",
str_detect(text_q_l, "berekraftsmål") ~ "3",
str_detect(text_a_l, "berekraftsmål") ~ "3",
str_detect(justification_l, "berekraftsmål") ~ "3"
str_detect(text_q_l, "2030-agendaen") ~ "3",
