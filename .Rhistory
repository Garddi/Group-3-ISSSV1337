ggplot(aes(term, beta, fill = topic)) +
geom_bar(stat = "identity") +
facet_wrap( ~ topic,
ncol = 3,
scales = "free") +
labs(x = "", y = "Word-Topic probability") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
View(thirdtopicswords)
thirdtopicswords %>%
filter(topic %in% c(51, 13, 24, 41, 39, 47)) %>%
ggplot(aes(term, beta, fill = topic)) +
geom_bar(stat = "identity") +
facet_wrap( ~ topic,
ncol = 3,
scales = "free") +
labs(x = "", y = "Word-Topic probability") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
ggplot(top100question, aes(x = session_id, fill = party_id)) +
geom_bar() +
scale_fill_discrete(type = safe_colorblind_palette) +
theme_bw()
ggplot(top100question, aes(x = session_id, fill = govposition)) +
geom_bar() +
scale_fill_discrete(type = safe_colorblind_palette) +
theme_bw()
ggplot(top100question, aes(x = session_id, fill = gender)) +
geom_bar() +
scale_fill_discrete(type = safe_colorblind_palette) +
theme_bw()
questiontopics_group_75 %>%
filter(topic %in% c(30,33,43,52,54,63)) %>%
ggplot(aes(term, beta, fill = topic)) +
geom_bar(stat = "identity") +
facet_wrap( ~ topic,
ncol = 3,
scales = "free") +
labs(x = "", y = "Word-Topic probability") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
"utdanning" %in% questiontopics_group_75$term
questiontopics_group_75$topic[which("utdanning" %in% questiontopics_group_75$term)]
questiontopics_group_75_1 %>%
ggplot(aes(term, beta, fill = topic)) + # Plotting the terms, the beta values (probabilities) and coloring them after topic
geom_bar(stat = "identity") + # Creating a bar chart and making the y-axis the same as beta
facet_wrap( ~ topic, # # Make different plots for each topic
ncol = 3, # Arrange them in three columns
scales = "free") + # Make the y-axes so that they can range freely, i.e. do not depend on each other
labs(x = "", y = "Word-Topic probability") + # Adding names to the x-axis and y-axis
theme_bw() + # Making the color background white
theme(legend.position = "none", # Removing the legend
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # Making the text on the x-axis appear vertically
questiontopics_group_75_2 %>%
ggplot(aes(term, beta, fill = topic)) + # Plotting the terms, the beta values (probabilities) and coloring them after topic
geom_bar(stat = "identity") + # Creating a bar chart and making the y-axis the same as beta
facet_wrap( ~ topic, # # Make different plots for each topic
ncol = 3, # Arrange them in three columns
scales = "free") + # Make the y-axes so that they can range freely, i.e. do not depend on each other
labs(x = "", y = "Word-Topic probability") + # Adding names to the x-axis and y-axis
theme_bw() + # Making the color background white
theme(legend.position = "none", # Removing the legend
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # Making the text on the x-axis appear vertically
questiontopics_group_75_3 %>%
ggplot(aes(term, beta, fill = topic)) + # Plotting the terms, the beta values (probabilities) and coloring them after topic
geom_bar(stat = "identity") + # Creating a bar chart and making the y-axis the same as beta
facet_wrap( ~ topic, # # Make different plots for each topic
ncol = 3, # Arrange them in three columns
scales = "free") + # Make the y-axes so that they can range freely, i.e. do not depend on each other
labs(x = "", y = "Word-Topic probability") + # Adding names to the x-axis and y-axis
theme_bw() + # Making the color background white
theme(legend.position = "none", # Removing the legend
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # Making the text on the x-axis appear vertically
questiontopics_group_75 %>%
filter(topic %in% c(21,30,33,43,52,54,63)) %>%
ggplot(aes(term, beta, fill = topic)) +
geom_bar(stat = "identity") +
facet_wrap( ~ topic,
ncol = 3,
scales = "free") +
labs(x = "", y = "Word-Topic probability") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
questiontopics_group_75_4 %>%
ggplot(aes(term, beta, fill = topic)) + # Plotting the terms, the beta values (probabilities) and coloring them after topic
geom_bar(stat = "identity") + # Creating a bar chart and making the y-axis the same as beta
facet_wrap( ~ topic, # # Make different plots for each topic
ncol = 3, # Arrange them in three columns
scales = "free") + # Make the y-axes so that they can range freely, i.e. do not depend on each other
labs(x = "", y = "Word-Topic probability") + # Adding names to the x-axis and y-axis
theme_bw() + # Making the color background white
theme(legend.position = "none", # Removing the legend
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # Making the text on the x-axis appear vertically
questiontopics_group_75_5 %>%
ggplot(aes(term, beta, fill = topic)) + # Plotting the terms, the beta values (probabilities) and coloring them after topic
geom_bar(stat = "identity") + # Creating a bar chart and making the y-axis the same as beta
facet_wrap( ~ topic, # # Make different plots for each topic
ncol = 3, # Arrange them in three columns
scales = "free") + # Make the y-axes so that they can range freely, i.e. do not depend on each other
labs(x = "", y = "Word-Topic probability") + # Adding names to the x-axis and y-axis
theme_bw() + # Making the color background white
theme(legend.position = "none", # Removing the legend
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # Making the text on the x-axis appear vertically
questiontopics_group_75_6 %>%
ggplot(aes(term, beta, fill = topic)) + # Plotting the terms, the beta values (probabilities) and coloring them after topic
geom_bar(stat = "identity") + # Creating a bar chart and making the y-axis the same as beta
facet_wrap( ~ topic, # # Make different plots for each topic
ncol = 3, # Arrange them in three columns
scales = "free") + # Make the y-axes so that they can range freely, i.e. do not depend on each other
labs(x = "", y = "Word-Topic probability") + # Adding names to the x-axis and y-axis
theme_bw() + # Making the color background white
theme(legend.position = "none", # Removing the legend
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) # Making the text on the x-axis appear vertically
questiontopics_group_75 %>%
filter(topic %in% c(21,30,42,43,52)) %>%
ggplot(aes(term, beta, fill = topic)) +
geom_bar(stat = "identity") +
facet_wrap( ~ topic,
ncol = 3,
scales = "free") +
labs(x = "", y = "Word-Topic probability") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
top_docs100topic21 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 21 & document %in% top100question$id)
ggplot(top_docs100topic21, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Topic 21")
ggplot(top_docs100topic30, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Topic 30")
top_docs100topic42 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 42 & document %in% top100question$id)
ggplot(top_docs100topic42, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Topic 42")
top_docs100topic43 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 43 & document %in% top100question$id)
ggplot(top_docs100topic43, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Topic 43")
top_docs100topic52 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 52 & document %in% top100question$id)
ggplot(top_docs100topic52, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Topic 52")
ggplot(unicefbudget_f, aes(x = Year, y = UnicefMoney)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "UNICEF grants by year", y = "NOK", x = "") +
scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016,
2017, 2018, 2019, 2020, 2021, 2022))
load("Budget_Analysis/UN_decisions.Rdata")
load("Budget_Analysis/UN_cases.Rdata")
grab_text <- function(text, target, before, after){
min <- which(unlist(map(str_split(text, "\\s"), ~grepl(target, .x))))-before
max <- which(unlist(map(str_split(text, "\\s"), ~grepl(target, .x))))+after
paste(str_split(text, "\\s")[[1]][min:max], collapse = " ")
}
for (i in 1:length(UN_decisions$decision_text_l)) {
tmp1 <- read_html(UN_decisions$decision_text_l[i])
tmp2 <- html_text(tmp1)
UN_decisions$cleanedtext_l[i] <- str_squish(str_remove_all(tmp2, "\r\n"))
}
library(stortingscrape)
library(tidyverse)
library(tidytext)
library(quanteda)
library(stm)
library(tidyr)
library(viridis)
library(rvest)
library(xml2)
for (i in 1:length(UN_decisions$decision_text_l)) {
tmp1 <- read_html(UN_decisions$decision_text_l[i])
tmp2 <- html_text(tmp1)
UN_decisions$cleanedtext_l[i] <- str_squish(str_remove_all(tmp2, "\r\n"))
}
unicefbudget <- list()
wfpbudget <- list()
unaidsbudget <- list()
unicefbudgetn <- list()
wfpbudgetn <- list()
unaidsbudgetn <- list()
## UNICEF GRANTS
for (x in 1:length(UN_decisions$cleanedtext_l)) {
if(str_detect(UN_decisions$cleanedtext_l[x], "unicef")){
unicefbudget[[x]] <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "unicef", before = 1, after  = 14)
if(str_detect(unicefbudget[[x]], "reduseres")){
tmpred <- grab_text(text = unicefbudget[[x]], target = "til", before = 0, after = 4)
tmp1 <- str_extract(tmpred, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
unicefbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}else{
tmp1 <- str_extract(unicefbudget[[x]], "([:digit:]{1,3}\\s?)[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{3}")
unicefbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}
}else{next}
}
unicefbudgets_t <- do.call("rbind", unicefbudgetn)
unicefbudget_f <- data.frame(Year = c(2022,2021,2020,2019,2018,2017,
2016,2015,2014,2013,2012,2011),
UnicefMoney = unicefbudgets_t)
ggplot(unicefbudget_f, aes(x = Year, y = UnicefMoney)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "UNICEF grants by year", y = "NOK", x = "") +
scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016,
2017, 2018, 2019, 2020, 2021, 2022))
for (x in 1:length(UN_decisions$cleanedtext_l)) {
if(str_detect(UN_decisions$cleanedtext_l[x], "wfp")){
wfpbudget[[x]] <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "wfp", before = 1, after  = 14)
if(str_detect(wfpbudget[[x]], "reduseres")){
tmpred <- grab_text(text = wfpbudget[[x]], target = "til", before = 0, after = 4)
tmp1 <- str_extract(tmpred, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
wfpbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}else{
if(str_detect(wfpbudget[[x]], "auka")){
tmpinc <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "wfp", before = 1, after = 20)
tmpinc2 <- grab_text(text = tmpinc, target = "til", before = 0, after = 5)
tmpinc3 <- str_extract(tmpinc2, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
wfpbudgetn[[x]] <- (as.numeric(str_remove_all(tmpinc3, " ")))
}else{
tmp1 <- str_extract(wfpbudget[[x]], "([:digit:]{1,3}\\s?)[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{3}")
wfpbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}}
}else{next}
}
wfpbudget_t <- do.call("rbind", wfpbudgetn)
wfpbudget_f <- data.frame(Year = c(2022,2021,2020,2019,2018,2017,
2016,2015,2014,2013,2012,2011),
WFPMoney = wfpbudget_t)
ggplot(wfpbudget_f, aes(x = Year, y = WFPMoney)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "WFP grants by year", y = "NOK", x = "") +
scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016,
2017, 2018, 2019, 2020, 2021, 2022))
undpbudget <- list()
undpbudgetn <- list()
for (x in 1:length(UN_decisions$cleanedtext_l)) {
if(str_detect(UN_decisions$cleanedtext_l[x], "undp")){
undpbudget[[x]] <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "undp", before = 1, after  = 14)
if(str_detect(undpbudget[[x]], "reduseres")){
tmpred <- grab_text(text = undpbudget[[x]], target = "til", before = 0, after = 4)
tmp1 <- str_extract(tmpred, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
undpbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}else{
if(str_detect(undpbudget[[x]], "auka")){
tmpinc <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "undp", before = 1, after = 20)
tmpinc2 <- grab_text(text = tmpinc, target = "til", before = 0, after = 5)
tmpinc3 <- str_extract(tmpinc2, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
undpbudgetn[[x]] <- (as.numeric(str_remove_all(tmpinc3, " ")))
}else{
tmp1 <- str_extract(undpbudget[[x]], "([:digit:]{1,3}\\s?)[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{3}")
undpbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}}
}else{next}
}
undpbudget_t <- do.call("rbind", undpbudgetn)
undpbudget_f <- data.frame(Year = c(2022,2021,2020,2019,2018,2017,
2016,2015,2014,2013,2012,2011),
UNDPMoney = undpbudget_t)
ggplot(undpbudget_f, aes(x = Year, y = UNDPMoney)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "UNDP grants by year", y = "NOK", x = "") +
scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016,
2017, 2018, 2019, 2020, 2021, 2022))
for (x in 1:length(UN_decisions$cleanedtext_l)) {
if(str_detect(UN_decisions$cleanedtext_l[x], "unaids")){
unaidsbudget[[x]] <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "unaids", before = 1, after  = 14)
if(str_detect(unaidsbudget[[x]], "reduseres")){
tmpred <- grab_text(text = unaidsbudget[[x]], target = "til", before = 0, after = 4)
tmp1 <- str_extract(tmpred, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
unaidsbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}else{
if(str_detect(unaidsbudget[[x]], "auka")){
tmpinc <- grab_text(text = UN_decisions$cleanedtext_l[x], target = "unaids", before = 1, after = 20)
tmpinc2 <- grab_text(text = tmpinc, target = "til", before = 0, after = 5)
tmpinc3 <- str_extract(tmpinc2, "[:digit:]{1,3}\\s[:digit:]{1,3}\\s[:digit:]{1,3}")
unaidsbudgetn[[x]] <- (as.numeric(str_remove_all(tmpinc3, " ")))
}else{
tmp1 <- str_extract(unaidsbudget[[x]], "([:digit:]{1,3}\\s?)[:digit:]{1,3}\\s[:digit:]{1,3}\\s000")
unaidsbudgetn[[x]] <- (as.numeric(str_remove_all(tmp1, " ")))
}}
}else{next}
}
UN_decisions$decision_title
unaidsbudget_t <- do.call("rbind", unaidsbudgetn)
unaidsbudget_f <- data.frame(Year = c(2021,2020, 2019, 2018.5,2018,2017,
2016, 2015.5,2015,2014,2013,2012,2011),
UNAIDSMoney = unaidsbudget_t)
ggplot(unaidsbudget_f, aes(x = Year, y = UNAIDSMoney)) +
geom_point() +
geom_line() +
theme_bw() +
labs(title = "UNAIDS grants by year", y = "NOK", x = "") +
scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016,
2017, 2018, 2019, 2020, 2021, 2022))
topic21docs <- question_doc_prob_75 %>%
filter(topic == 21) %>%
slice_max(order_by = gamma, n = 650)
View(topic21docs)
topic21docs <- question_doc_prob_75 %>%
filter(topic == 21) %>%
slice_max(order_by = gamma, n = 300)
View(topic21docs)
topic21docstopic43 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 43 & document %in% top100question$id)
ggplot(top_docs100topic43, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Sustainability and Education")
topic21docstopic43 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 43 & document %in% topic21docs$document)
ggplot(top_docs100topic43, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Sustainability and Education")
ggplot(topic21docstopic43, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Sustainability and Education")
topic42docstopic43 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 43 & document %in% topic42docs$document)
topic42docs <- question_doc_prob_75 %>%
filter(topic == 42) %>%
slice_max(order_by = gamma, n = 300)
topic42docstopic43 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 43 & document %in% topic42docs$document)
ggplot(topic42docstopic43, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Sustainability and Education")
topic52docs <- question_doc_prob_75 %>%
filter(topic == 52) %>%
slice_max(order_by = gamma, n = 300)
topic52docstopic43 <- question_doc_prob_75 %>%
group_by(document) %>% # Find the next statistic per document
filter(topic == 43 & document %in% topic52docs$document)
ggplot(topic52docstopic43, aes(x = gamma)) +
geom_density() +
theme_bw() +
labs(title = "Density of Sustainability and Education")
install.packages("reshape")
library(reshape)
?round
rouncor <- round(cor(question_doc_prob_75), 2)
rouncor <- round(cor(question_doc_prob_75$gamma), 2)
View(question_doc_prob_75)
topic_assignment2 <- question_doc_prob_75 %>%
group_by(document) %>%
summarise(`1` = first(gamma),
`2` = nth(gamma, 2),
`3` = nth(gamma, 3),
`4` = nth(gamma, 4),
`5` = nth(gamma, 5),
`6` = nth(gamma, 6),
`7` = nth(gamma, 7),
`8` = nth(gamma, 8),
`9` = nth(gamma, 9),
`10` = nth(gamma, 10),
`11` = nth(gamma, 11),
`12` = nth(gamma, 12),
`13` = nth(gamma, 13),
`14` = nth(gamma, 13),
`15` = nth(gamma, 15),
`16` = nth(gamma, 16),
`17` = nth(gamma, 17),
`18` = nth(gamma, 18),
`19` = nth(gamma, 19),
`20` = nth(gamma, 20),
`21` = nth(gamma, 21),
`22` = nth(gamma, 22),
`23` = nth(gamma, 23),
`24` = nth(gamma, 24),
`25` = nth(gamma, 25),
`26` = nth(gamma, 26),
`27` = nth(gamma, 27),
`28` = nth(gamma, 28),
`29` = nth(gamma, 29),
`30` = nth(gamma, 30),
`31` = nth(gamma, 31),
`32` = nth(gamma, 32),
`33` = nth(gamma, 33),
`34` = nth(gamma, 34),
`35` = nth(gamma, 35),
`36` = nth(gamma, 36),
`37` = nth(gamma, 37),
`38` = nth(gamma, 38),
`39` = nth(gamma, 39),
`40` = nth(gamma, 40),
`41` = nth(gamma, 41),
`42` = nth(gamma, 42),
`43` = nth(gamma, 43),
`44` = nth(gamma, 44),
`45` = nth(gamma, 45),
`46` = nth(gamma, 46),
`47` = nth(gamma, 47),
`48` = nth(gamma, 48),
`49` = nth(gamma, 49),
`50` = nth(gamma, 50),
`51` = nth(gamma, 51),
`52` = nth(gamma, 52),
`53` = nth(gamma, 53),
`54` = nth(gamma, 54),
`55` = nth(gamma, 55),
`56` = nth(gamma, 56),
`57` = nth(gamma, 57),
`58` = nth(gamma, 58),
`59` = nth(gamma, 59),
`60` = nth(gamma, 60),
`61` = nth(gamma, 61),
`62` = nth(gamma, 62),
`63` = nth(gamma, 63),
`64` = nth(gamma, 64),
`65` = nth(gamma, 65),
`66` = nth(gamma, 66),
`67` = nth(gamma, 67),
`68` = nth(gamma, 68),
`69` = nth(gamma, 69),
`70` = nth(gamma, 70),
`71` = nth(gamma, 71),
`72` = nth(gamma, 72),
`73` = nth(gamma, 73),
`74` = nth(gamma, 74),
`75` = nth(gamma, 75))
View(topic_assignment2)
corframe <- topic_assignment2 %>%
select(-(document))
rouncor <- round(cor(corframe), 2)
melted <- melt(rouncor)
ggplot(melted, aes(x = Var1, y = Var2, fill = value)) +
geom_tile()
View(melted)
ggplot(melted, aes(x = X1, y = X2, fill = value)) +
geom_tile()
ggplot(melted, aes(x = X1, y = X2, fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
topic_assignment3 <- topic_assignment2 %>%
select(`21`, `42`, `52`, `43`)
corframe2 <- topic_assignment3 %>%
select(-(document))
rouncor2 <- round(cor(corframe), 2)
ggplot(melted2, aes(x = X1, y = X2, fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
melted2 <- melt(rouncor)
melted2 <- melt(rouncor2)
rouncor2 <- round(cor(corframe2), 2)
rouncor2 <- round(cor(topic_assignment3), 2)
melted2 <- melt(rouncor2)
ggplot(melted2, aes(x = X1, y = X2, fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
ggplot(melted2, aes(x = as.character(X1), y = as.character(X2), fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
topic_assignment3 <- topic_assignment2 %>%
select(`21`, `30`, `42`, `52`, `43`)
rouncor2 <- round(cor(topic_assignment3), 2)
melted2 <- melt(rouncor2)
ggplot(melted2, aes(x = as.character(X1), y = as.character(X2), fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
View(question_doc_prob_75)
View(corframe)
View(questiontopics_group_topcat)
View(melted)
ggplot(melted, aes(x = X1, y = X2, fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
ggplot(melted2, aes(x = as.character(X1), y = as.character(X2), fill = value)) +
geom_tile() +
theme_bw() +
labs(title = "Correlation map between topic Gammas", x = "",
y = "")
