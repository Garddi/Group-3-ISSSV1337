0.1+0.2
(0.1+0.2)-0.3
library(tidyverse)
library(stargazer)
load("C:/Users/Gard/OneDrive/Documents/STV1020/V22SeminarTing/prove/prove/siste gang/soc_survey.Rdata")
class(soc_survey$aar)
class(soc_survey$kjnn)
class(soc_survey$inntekt_prmnd)
class(soc_survey$innfl_pol)
class(soc_survey$pol_tillit)
mean(soc_survey$aar, na.rm = TRUE)
mean(soc_survey$inntekt_prmnd, na.rm = TRUE)
sd(soc_survey$aar, na.rm = TRUE)
sd(soc_survey$inntekt_prmnd, na.rm = TRUE)
ggplot(data = soc_survey, aes(x = kjnn)) + geom_bar() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
sum(is.na(soc_survey$aar))
sum(is.na(soc_survey$pol_tillit))
ggplot(data = soc_survey, aes(x = kjnn)) +
geom_boxplot(aes(y = inntekt_prmnd))
cor(x = soc_survey$inntekt_prmnd, y = soc_survey$pol_tillit,
use = "pairwise.complete.obs")
cor.test(soc_survey$inntekt_prmnd, soc_survey$pol_tillit,
use = "pairwise.complete.obs")
summary(soc_survey$aar)
dummy <- soc_survey %>%
select(aar)
dummy$dummy.aar <- factor(
ifelse(dummy$aar < median(dummy$aar, na.rm = TRUE), 1,
ifelse(dummy$aar > median(dummy$aar, na.rm = TRUE), 2, NA)),
1:2, labels = c("0", "1"))
summary(dummy$dummy.aar)
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("02_text")
x = [1:10]
x <- [1:10]
x <- c(1:10)
y_fits <- vector()
load(many_models, file = "many_models.rda")
load(many_models, file = "C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda")
load(many_models, file = "C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load(many_models, file = "C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load(file = "C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda.rda")
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda")
load("Question_Data/questionsdfm.Rdata")
setwd("C:/Users/Gard/OneDrive/Documents/Group-3-ISSSV1337")
load("Question_Data/questionsdfm.Rdata")
library(furrr)
library(tidyverse)
library(quanteda)
library(tidytext)
library(stm)
heldout <- make.heldout(questiontokens_dfm) # Making the heldout measure
k_result <- many_models %>% # Using mutate to make new variables
mutate(exclusivity = map(topic_model, exclusivity),  # Using map to iterate over all topic models in the many_models object and fetch the exclusivity measure
semantic_coherence = map(topic_model, semanticCoherence, questiontokens_dfm), # Fetching semantic coherence measure
eval_heldout = map(topic_model, eval.heldout, heldout$missing), # Feting the heldout measure
residual = map(topic_model, checkResiduals, questiontokens_dfm), # Fething the residuals measure
iterations = map_dbl(topic_model, function(x) length(x$convergence$bound))) # Fetching the number of iterations for each model
rlang::last_error()
rlang::last_trace()
load("C:/Users/Gard/OneDrive/Documents/ISSSV1337/many_models.rda")
